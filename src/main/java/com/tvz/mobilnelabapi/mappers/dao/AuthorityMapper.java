package com.tvz.mobilnelabapi.mappers.dao;

import com.tvz.mobilnelabapi.model.Authority;
import com.tvz.mobilnelabapi.model.AuthorityExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface AuthorityMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@SelectProvider(type = AuthoritySqlProvider.class, method = "countByExample")
	long countByExample(AuthorityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@DeleteProvider(type = AuthoritySqlProvider.class, method = "deleteByExample")
	int deleteByExample(AuthorityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@Delete({ "delete from mob.Authority", "where ID = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@Insert({ "insert into mob.Authority (ID, Name, ", "FullName)",
			"values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ", "#{fullname,jdbcType=VARCHAR})" })
	int insert(Authority record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@InsertProvider(type = AuthoritySqlProvider.class, method = "insertSelective")
	int insertSelective(Authority record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@SelectProvider(type = AuthoritySqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "Name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FullName", property = "fullname", jdbcType = JdbcType.VARCHAR) })
	List<Authority> selectByExampleWithRowbounds(AuthorityExample example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@SelectProvider(type = AuthoritySqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "Name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FullName", property = "fullname", jdbcType = JdbcType.VARCHAR) })
	List<Authority> selectByExample(AuthorityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@Select({ "select", "ID, Name, FullName", "from mob.Authority", "where ID = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "Name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FullName", property = "fullname", jdbcType = JdbcType.VARCHAR) })
	Authority selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@UpdateProvider(type = AuthoritySqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") Authority record, @Param("example") AuthorityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@UpdateProvider(type = AuthoritySqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") Authority record, @Param("example") AuthorityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@UpdateProvider(type = AuthoritySqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(Authority record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table mob.Authority
	 * 
	 * @mbg.generated Sun Jul 29 14:44:38 CEST 2018
	 */
	@Update({ "update mob.Authority", "set Name = #{name,jdbcType=VARCHAR},", "FullName = #{fullname,jdbcType=VARCHAR}",
			"where ID = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(Authority record);

	@Select({ "select", "FullName", "from mob.authority authority",
			"inner join mob.UserAuthority userauthority ON userauthority.authorityid = authority.id ",
			"where userauthority.userid = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "FullName", property = "fullname", jdbcType = JdbcType.VARCHAR) })
	List<String> selectAuthorityStringByUserId(Integer id);

	@Select({ "select", "*", "from mob.authority authority",
			"inner join mob.UserAuthority userauthority ON userauthority.authorityid = authority.id ",
			"where userauthority.userid = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "Name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FullName", property = "fullname", jdbcType = JdbcType.VARCHAR) })
	List<Authority> selectAuthorityByUserId(Integer id);

	@Select({ "select", "*", "from mob.authority authority",
			"inner join mob.UserAuthority userauthority ON userauthority.authorityid = authority.id ",
			"inner join mob.[User] usertable ON usertable.id = userauthority.userid ",
			"where usertable.username = #{username,jdbcType=VARCHAR}" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "Name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "FullName", property = "fullname", jdbcType = JdbcType.VARCHAR) })
	List<Authority> selectAuthorityByUsername(String username);

}