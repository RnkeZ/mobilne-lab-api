package com.tvz.mobilnelabapi.mappers.dao;

import com.tvz.mobilnelabapi.model.Measurementreportdata;
import com.tvz.mobilnelabapi.model.MeasurementreportdataExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface MeasurementreportdataMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@SelectProvider(type = MeasurementreportdataSqlProvider.class, method = "countByExample")
	long countByExample(MeasurementreportdataExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@DeleteProvider(type = MeasurementreportdataSqlProvider.class, method = "deleteByExample")
	int deleteByExample(MeasurementreportdataExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@Delete({ "delete from mob.MeasurementReportData", "where ID = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@Insert({ "insert into mob.MeasurementReportData (ID, MeasurementID, ", "ParameterName, ParameterValueMin, ",
			"ParameterValueAverage, ParameterValueMax, ", "ParameterUnits, UseForReport)",
			"values (#{id,jdbcType=INTEGER}, #{measurementid,jdbcType=INTEGER}, ",
			"#{parametername,jdbcType=NVARCHAR}, #{parametervaluemin,jdbcType=DECIMAL}, ",
			"#{parametervalueaverage,jdbcType=DECIMAL}, #{parametervaluemax,jdbcType=DECIMAL}, ",
			"#{parameterunits,jdbcType=NVARCHAR}, #{useforreport,jdbcType=BIT})" })
	int insert(Measurementreportdata record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@InsertProvider(type = MeasurementreportdataSqlProvider.class, method = "insertSelective")
	int insertSelective(Measurementreportdata record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@SelectProvider(type = MeasurementreportdataSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "MeasurementID", property = "measurementid", jdbcType = JdbcType.INTEGER),
			@Result(column = "ParameterName", property = "parametername", jdbcType = JdbcType.NVARCHAR),
			@Result(column = "ParameterValueMin", property = "parametervaluemin", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterValueAverage", property = "parametervalueaverage", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterValueMax", property = "parametervaluemax", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterUnits", property = "parameterunits", jdbcType = JdbcType.NVARCHAR),
			@Result(column = "UseForReport", property = "useforreport", jdbcType = JdbcType.BIT) })
	List<Measurementreportdata> selectByExampleWithRowbounds(MeasurementreportdataExample example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@SelectProvider(type = MeasurementreportdataSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "MeasurementID", property = "measurementid", jdbcType = JdbcType.INTEGER),
			@Result(column = "ParameterName", property = "parametername", jdbcType = JdbcType.NVARCHAR),
			@Result(column = "ParameterValueMin", property = "parametervaluemin", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterValueAverage", property = "parametervalueaverage", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterValueMax", property = "parametervaluemax", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterUnits", property = "parameterunits", jdbcType = JdbcType.NVARCHAR),
			@Result(column = "UseForReport", property = "useforreport", jdbcType = JdbcType.BIT) })
	List<Measurementreportdata> selectByExample(MeasurementreportdataExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@Select({ "select", "ID, MeasurementID, ParameterName, ParameterValueMin, ParameterValueAverage, ",
			"ParameterValueMax, ParameterUnits, UseForReport", "from mob.MeasurementReportData",
			"where ID = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "MeasurementID", property = "measurementid", jdbcType = JdbcType.INTEGER),
			@Result(column = "ParameterName", property = "parametername", jdbcType = JdbcType.NVARCHAR),
			@Result(column = "ParameterValueMin", property = "parametervaluemin", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterValueAverage", property = "parametervalueaverage", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterValueMax", property = "parametervaluemax", jdbcType = JdbcType.DECIMAL),
			@Result(column = "ParameterUnits", property = "parameterunits", jdbcType = JdbcType.NVARCHAR),
			@Result(column = "UseForReport", property = "useforreport", jdbcType = JdbcType.BIT) })
	Measurementreportdata selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@UpdateProvider(type = MeasurementreportdataSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") Measurementreportdata record,
			@Param("example") MeasurementreportdataExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@UpdateProvider(type = MeasurementreportdataSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") Measurementreportdata record,
			@Param("example") MeasurementreportdataExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@UpdateProvider(type = MeasurementreportdataSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(Measurementreportdata record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	@Update({ "update mob.MeasurementReportData", "set MeasurementID = #{measurementid,jdbcType=INTEGER},",
			"ParameterName = #{parametername,jdbcType=NVARCHAR},",
			"ParameterValueMin = #{parametervaluemin,jdbcType=DECIMAL},",
			"ParameterValueAverage = #{parametervalueaverage,jdbcType=DECIMAL},",
			"ParameterValueMax = #{parametervaluemax,jdbcType=DECIMAL},",
			"ParameterUnits = #{parameterunits,jdbcType=NVARCHAR},", "UseForReport = #{useforreport,jdbcType=BIT}",
			"where ID = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(Measurementreportdata record);
}