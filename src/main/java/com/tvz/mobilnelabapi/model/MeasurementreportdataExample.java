package com.tvz.mobilnelabapi.model;

import java.util.ArrayList;
import java.util.List;
import java.math.BigDecimal;

public class MeasurementreportdataExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public MeasurementreportdataExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andMeasurementidIsNull() {
			addCriterion("MeasurementID is null");
			return (Criteria) this;
		}

		public Criteria andMeasurementidIsNotNull() {
			addCriterion("MeasurementID is not null");
			return (Criteria) this;
		}

		public Criteria andMeasurementidEqualTo(Integer value) {
			addCriterion("MeasurementID =", value, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidNotEqualTo(Integer value) {
			addCriterion("MeasurementID <>", value, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidGreaterThan(Integer value) {
			addCriterion("MeasurementID >", value, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidGreaterThanOrEqualTo(Integer value) {
			addCriterion("MeasurementID >=", value, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidLessThan(Integer value) {
			addCriterion("MeasurementID <", value, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidLessThanOrEqualTo(Integer value) {
			addCriterion("MeasurementID <=", value, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidIn(List<Integer> values) {
			addCriterion("MeasurementID in", values, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidNotIn(List<Integer> values) {
			addCriterion("MeasurementID not in", values, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidBetween(Integer value1, Integer value2) {
			addCriterion("MeasurementID between", value1, value2, "measurementid");
			return (Criteria) this;
		}

		public Criteria andMeasurementidNotBetween(Integer value1, Integer value2) {
			addCriterion("MeasurementID not between", value1, value2, "measurementid");
			return (Criteria) this;
		}

		public Criteria andParameternameIsNull() {
			addCriterion("ParameterName is null");
			return (Criteria) this;
		}

		public Criteria andParameternameIsNotNull() {
			addCriterion("ParameterName is not null");
			return (Criteria) this;
		}

		public Criteria andParameternameEqualTo(String value) {
			addCriterion("ParameterName =", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameNotEqualTo(String value) {
			addCriterion("ParameterName <>", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameGreaterThan(String value) {
			addCriterion("ParameterName >", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameGreaterThanOrEqualTo(String value) {
			addCriterion("ParameterName >=", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameLessThan(String value) {
			addCriterion("ParameterName <", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameLessThanOrEqualTo(String value) {
			addCriterion("ParameterName <=", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameLike(String value) {
			addCriterion("ParameterName like", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameNotLike(String value) {
			addCriterion("ParameterName not like", value, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameIn(List<String> values) {
			addCriterion("ParameterName in", values, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameNotIn(List<String> values) {
			addCriterion("ParameterName not in", values, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameBetween(String value1, String value2) {
			addCriterion("ParameterName between", value1, value2, "parametername");
			return (Criteria) this;
		}

		public Criteria andParameternameNotBetween(String value1, String value2) {
			addCriterion("ParameterName not between", value1, value2, "parametername");
			return (Criteria) this;
		}

		public Criteria andParametervalueminIsNull() {
			addCriterion("ParameterValueMin is null");
			return (Criteria) this;
		}

		public Criteria andParametervalueminIsNotNull() {
			addCriterion("ParameterValueMin is not null");
			return (Criteria) this;
		}

		public Criteria andParametervalueminEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMin =", value, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminNotEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMin <>", value, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminGreaterThan(BigDecimal value) {
			addCriterion("ParameterValueMin >", value, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMin >=", value, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminLessThan(BigDecimal value) {
			addCriterion("ParameterValueMin <", value, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMin <=", value, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminIn(List<BigDecimal> values) {
			addCriterion("ParameterValueMin in", values, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminNotIn(List<BigDecimal> values) {
			addCriterion("ParameterValueMin not in", values, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ParameterValueMin between", value1, value2, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueminNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ParameterValueMin not between", value1, value2, "parametervaluemin");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageIsNull() {
			addCriterion("ParameterValueAverage is null");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageIsNotNull() {
			addCriterion("ParameterValueAverage is not null");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageEqualTo(BigDecimal value) {
			addCriterion("ParameterValueAverage =", value, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageNotEqualTo(BigDecimal value) {
			addCriterion("ParameterValueAverage <>", value, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageGreaterThan(BigDecimal value) {
			addCriterion("ParameterValueAverage >", value, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ParameterValueAverage >=", value, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageLessThan(BigDecimal value) {
			addCriterion("ParameterValueAverage <", value, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ParameterValueAverage <=", value, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageIn(List<BigDecimal> values) {
			addCriterion("ParameterValueAverage in", values, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageNotIn(List<BigDecimal> values) {
			addCriterion("ParameterValueAverage not in", values, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ParameterValueAverage between", value1, value2, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervalueaverageNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ParameterValueAverage not between", value1, value2, "parametervalueaverage");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxIsNull() {
			addCriterion("ParameterValueMax is null");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxIsNotNull() {
			addCriterion("ParameterValueMax is not null");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMax =", value, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxNotEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMax <>", value, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxGreaterThan(BigDecimal value) {
			addCriterion("ParameterValueMax >", value, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMax >=", value, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxLessThan(BigDecimal value) {
			addCriterion("ParameterValueMax <", value, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ParameterValueMax <=", value, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxIn(List<BigDecimal> values) {
			addCriterion("ParameterValueMax in", values, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxNotIn(List<BigDecimal> values) {
			addCriterion("ParameterValueMax not in", values, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ParameterValueMax between", value1, value2, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParametervaluemaxNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ParameterValueMax not between", value1, value2, "parametervaluemax");
			return (Criteria) this;
		}

		public Criteria andParameterunitsIsNull() {
			addCriterion("ParameterUnits is null");
			return (Criteria) this;
		}

		public Criteria andParameterunitsIsNotNull() {
			addCriterion("ParameterUnits is not null");
			return (Criteria) this;
		}

		public Criteria andParameterunitsEqualTo(String value) {
			addCriterion("ParameterUnits =", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsNotEqualTo(String value) {
			addCriterion("ParameterUnits <>", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsGreaterThan(String value) {
			addCriterion("ParameterUnits >", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsGreaterThanOrEqualTo(String value) {
			addCriterion("ParameterUnits >=", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsLessThan(String value) {
			addCriterion("ParameterUnits <", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsLessThanOrEqualTo(String value) {
			addCriterion("ParameterUnits <=", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsLike(String value) {
			addCriterion("ParameterUnits like", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsNotLike(String value) {
			addCriterion("ParameterUnits not like", value, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsIn(List<String> values) {
			addCriterion("ParameterUnits in", values, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsNotIn(List<String> values) {
			addCriterion("ParameterUnits not in", values, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsBetween(String value1, String value2) {
			addCriterion("ParameterUnits between", value1, value2, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andParameterunitsNotBetween(String value1, String value2) {
			addCriterion("ParameterUnits not between", value1, value2, "parameterunits");
			return (Criteria) this;
		}

		public Criteria andUseforreportIsNull() {
			addCriterion("UseForReport is null");
			return (Criteria) this;
		}

		public Criteria andUseforreportIsNotNull() {
			addCriterion("UseForReport is not null");
			return (Criteria) this;
		}

		public Criteria andUseforreportEqualTo(Boolean value) {
			addCriterion("UseForReport =", value, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportNotEqualTo(Boolean value) {
			addCriterion("UseForReport <>", value, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportGreaterThan(Boolean value) {
			addCriterion("UseForReport >", value, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportGreaterThanOrEqualTo(Boolean value) {
			addCriterion("UseForReport >=", value, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportLessThan(Boolean value) {
			addCriterion("UseForReport <", value, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportLessThanOrEqualTo(Boolean value) {
			addCriterion("UseForReport <=", value, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportIn(List<Boolean> values) {
			addCriterion("UseForReport in", values, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportNotIn(List<Boolean> values) {
			addCriterion("UseForReport not in", values, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportBetween(Boolean value1, Boolean value2) {
			addCriterion("UseForReport between", value1, value2, "useforreport");
			return (Criteria) this;
		}

		public Criteria andUseforreportNotBetween(Boolean value1, Boolean value2) {
			addCriterion("UseForReport not between", value1, value2, "useforreport");
			return (Criteria) this;
		}

		public Criteria andParameternameLikeInsensitive(String value) {
			addCriterion("upper(ParameterName) like", value.toUpperCase(), "parametername");
			return (Criteria) this;
		}

		public Criteria andParameterunitsLikeInsensitive(String value) {
			addCriterion("upper(ParameterUnits) like", value.toUpperCase(), "parameterunits");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mob.MeasurementReportData
	 * @mbg.generated  Sun Sep 16 22:15:54 CEST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mob.MeasurementReportData
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 16 16:51:22 CEST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}